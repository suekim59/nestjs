nest JS Cli로 nest JS 시작하기
1. npm i -g @nestjs/cli
2. nest new project-name
//nest 프로젝트 생성

로직 순서
localhost:3000(get) ->controller ->appService

<다이어그램 자료 확인>
https://app.diagrams.net/

nest g module boards : 모듈 generate
->
CREATE src/boards/boards.module.ts (83 bytes)
UPDATE src/app.module.ts (164 bytes)

nest g controller boards --no-spec : 모듈의 컨트롤러 generate
->
CREATE src/boards/boards.controller.ts (101 bytes)
UPDATE src/boards/boards.module.ts (174 bytes)

nest g service boards --no-spec
->
CREATE src/boards/boards.service.ts (90 bytes)
UPDATE src/boards/boards.module.ts (254 bytes)

uuid 모듈 ( uniq id 생성)
npm install uuid --save

pipe 생성 (transformation & validation)
npm install class-validator class-transformer --save

***local memory에 저장했으나, 이제 데이터베이스 사용!
설치할 두 가지
1. PostgresSQL
2. pgAdmin


typeORM을 사용하기 위해서 설치해야 하는 모듈들
1. @nestjs/typeorm - NestJS에서 TypeOrm을 사용하기 위해 연동시켜주는 모듈
2. typeorm - typeorm
3. pg - Postgres 모듈
=> npm install pg typeorm @nestjs/typeorm --save


nest g module auth : auth 모듈 생성
nest g controller auth --no-spec : auth 컨트롤러 생성
nest g service auth --no-spec : auth 서비스 생성

유저이름에 유니크한 값 주기
1. repository에서 findOne 메소드를 이용해서 같은 유저 있는지 체크
-> 데이터베이스 처리 두 번 필요
2. 데이터베이스 레벨에서 같은 이름을 가진 유저가 있다면 에러를 던져주는 방법

비밀번호 암호화 하기
bcryptjs 모듈 사용하기
npm install bcryptjs --save


JWT
:Json web token 당사자간에 정보를 json 개체로 안전하게 전송하기 위한 컴팩트하고
독립적인 방식을 정의하는 개방형 표준
디지털 서명이 되어 있으므로 확인하고 신뢰 가능
=> 정보를 안전하게 전할 때 유저희 권한 같은 것을 체크를 하기 위해서 사용하는데
유용한 모듈

유저 로그인 -> 토큰 생성 -> 토큰 보관
필요한 모듈 설치
@nestjs/jwt : nestjs에서 jwt를 사용하기 위해 필요한 모듈

@nestjs/passport : nestjs에서 passport를 사용하기 위해 필요한 모듈

passport : passport모듈

passport-jwt : jwt 모듈

npm install @nestjs/jwt @nestjs/passport passport passport-jwt --save

@types/passport-jwt : passport-jwt 모듈을 위한 타입 정의 모듈

- 유저와 게시물 데이터의 관계 형성
관계 형성 위해 엔티티에 서로 간의 필드를 넣어줘야 한다.

- 게시물 생성할 때 유저 정보 넣어주기

- 원래 로그 넣는 것은 하나하나 개발하면서 사용

- 설정 파일(Configuration)
: runtime 도중에 바뀌는 것이 아닌 애플리케이션이 시작할 때 로드가 되어서
그 값들을 정의하여 준다. 그리고 설정 파일은 여러 가지 파일 형식을 사용할 수 있음
ex) XML, JSON, YAML, Environment Variables 같은 많은 형식

- 환경 변수 : 비밀번호나 api key같은 정보
npm install -g win-node-env
npm install config --save

- default.YAML 
development.YAML
production.YAML

-jwt expiresIn 3600 -> 1시간

-synchronize

-jwt 
secret -> auth module에서 정한 값